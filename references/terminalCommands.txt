Github.com -> Create new repository, initiate repository with readme.txt

* Windows *
dir = list directory files
cd MY_PROJECT
cd .. = step out of the directory
E:

* Heroku Workflow *
// Log into the Heroku Toolbelt
$ heroku login
// Clone the repository
$ heroku git:clone -a PROJECT_NAME
$ cd gentle-taiga-20075
// Deploy your changes
$ git add .
$ git commit -am "make it better"
$ git push heroku master

* Git Workflow *
git clone REPOSITORY_URL
git pull = get current files
/* Change Files Now */
git add FILE
git add .
git status
git commit -m "COMMENT ABOUT COMMIT"
git push = save commit to github


* Adding a remote *
The git remote add command takes two arguments:
  A remote name, for example, origin
  A remote URL, for example, https://github.com/user/repo.git

git remote add origin https://github.com/user/repo.git
# Set a new remote

git remote -v
# Verify new remote
origin  https://github.com/user/repo.git (fetch)
origin  https://github.com/user/repo.git (push)


* Create a new branch with git and Manage *
// Create the branch on your local machine and switch in this branch :
$ git checkout -b [name_of_your_new_branch]
// Push the branch on github :
$ git push origin [name_of_your_new_branch]
// You can see all branches created by using :
$ git branch
// Add a new remote for your branch :
$ git remote add [name_of_your_remote] 
// Push changes from your commit into your branch :
$ git push origin [name_of_your_remote]
// Update your branch when the original branch from official repository has been updated :
$ git fetch [name_of_your_remote]
// Then you need to apply to merge changes, if your branch is derivated from develop you need to do 
$ git merge [name_of_your_remote]/develop
// Delete a branch on your local filesystem :
$ git branch -d [name_of_your_new_branch]
// To force the deletion of local branch on your filesystem :
$ git branch -D [name_of_your_new_branch]
// Delete the branch on github :
$ git push origin :[name_of_your_new_branch]


* Git Help *
git = all git commands

